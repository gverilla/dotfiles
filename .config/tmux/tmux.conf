set-environment -g TMUX_PLUGIN_MANAGER_PATH '"$XDG_CONFIG_HOME"/tmux/plugins/'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '             \
  tmux-plugins/tpm                \
  tmux-plugins/tmux-sensible      \
'

# use optional defaults from tmux-sensible
set -g @almost-sensible 'on'

set-option -g default-shell /usr/bin/zsh

# vi-style controls for copy mode
set-window-option -g mode-keys vi

# enable mouse support
set-window-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# load powerline theme
source /usr/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf

# load airline colors
source "$XDG_CONFIG_HOME"/tmux/airline.conf

# start windows numbering at 1
set-option -g base-index 1
# make pane numbering consistent with windows
set-window-option -g pane-base-index 1

# rename window to reflect current program
set-window-option -g automatic-rename on
# renumber windows when a window is closed
set-option -g renumber-windows on

# dynamic window title
set-option -g set-titles on
set-option -g set-titles-string '#h ❐ #S ● #I #W'

# correct term for 256 colours
set-option -g default-terminal "screen-256color"

# change prefix key
unbind C-b
set-option -g prefix C-a

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 2
bind > resize-pane -R 2
bind - resize-pane -D 2
bind + resize-pane -U 2

#urxvt tab like window switching (-n: no prior escape seq)
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

#CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux save-buffer - | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '"$XDG_CONFIG_HOME"/tmux/plugins/tpm/tpm'
